type Article @model
    @key(fields: ["id", "uri"])
    @key(name: "byDate", fields: ["dataType", "datePublished"], queryField: "articlesByDate")
{
    authors: [String]
    body: String!
    dataType: String!
    date: String
    dateTime: String
    datePublished: AWSDateTime!
    eventUri: String
    image: String
    language: String
    quality: Int!
    share: Int
    similarity: Float
    time: String
    title: String!
    tone: Float!
    uri: String!
    url: String!
    wordCount: Int!
    configs: [ConfigMember!] @connection(name: "ArticleConfigMembers")
    displayKeywords: [String!]
    id: ID!
    keywords: [String!]
    topics: [String!]
    sourceCountry: String!
    sourceRanking: Int
    sourceTitle: String!
}

type User @model(subscriptions: null) {
    billingAddressCity: String!
    billingAddressHouseNo: String!
    billingAddressPostalCode: String!
    billingAddressStreet: String!
    cognitoId: String!
    config: Config @connection(name: "UserConfig")
    email: String!
    freeTrial: Boolean!
    freeTrailStartDate: String
    freeTrailEndDate: String
    fullName: String
    id: ID!
    isPremium: Boolean!
    isActive: Boolean
    lastLogin: String
    premiumEndDate: String
    premiumIsExpiring: Boolean
    premiumStartDate: String
    username: String
    feedbackDiscovery: String
    feedbackLeaveReason: String
    feedbackPromoterScore: Int
}

type ConfigMember @model(queries: null) {
    article: Article! @connection(name: "ArticleConfigMembers")
    config: Config! @connection(name: "ConfigMembersConnection")
    id: ID!
}

type Config @model {
    id: ID!
    keywordsToInclude: [String]!,
    keywordsToExclude: [String]!,
    qualityUpperRange: Float!,
    qualityLowerRange: Float!,
    toneUpperRange: Float!,
    toneLowerRange: Float!,
    topicsToInclude: [String]!,
    topicsToExclude: [String]!,
    savedArticles: [ConfigMember!] @connection(name: "ConfigMembersConnection")
    user: User @connection(name: "UserConfig")
}